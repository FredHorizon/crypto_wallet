<%= form_with(model: coin, local: true) do |form| %> <!-- 'model:coin' pega a variável 'coin' de 'new.html.erb', que, por sua vez, pegou a variável de instancia '@coin', da ação 'new' do controller e a tranformou em 'coin'-->
  <% if coin.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(coin.errors.count, "error") %> prohibited this coin from being saved:</h2>

      <ul>
      <% coin.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :description %>
    <%= form.text_field :description %>
  </div>

  <div class="field">
    <%= form.label :acronym %>
    <%= form.text_field :acronym %>
  </div>

  <div class="field">
    <%= form.label :url_image %>
    <%= form.text_field :url_image %>
    <%#= image_tag coin.url_image, width:25, height:25 %>
  </div>

  <div class="field">
    <!-- Sintaxe do helper select:
      <#%= select("post", "person_id", Person.all.collect {|p| [ p.name, p.id ] }, { include_blank: true }) %>
    -->
    <!-- Contudo, o método form_with foi implementado nessa partial. Isso dispensa o uso do objeto "post", que no caso seria "coin". Então a sintaxe fica assim: -->
    <%= form.label :mining_type %>
    <%= form.select("mining_type_id", MiningType.all.collect {|m| [ m.description, m.id ] }, { include_blank: "selecione..." }) %> <!-- 'mining_type_id' é o campo FK. 'collect'é a mesma coisa que '.map'-->
  </div>
  
  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>
